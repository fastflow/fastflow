* 22/04/11 - v.1.1.0
   - MSqueue reworked and now not is in experimental state, it is working also 
     on Windows OS and OSX. Removed DCAS and used CAS.
   - removed some performance problems on Windows OS. 
   - slightly modified MPMC interface and usage
   - added Quicksort algo implementation which uses MPMC queue 
     (both in blocking and non-blocking version)
   - fixed some compilation problem under OSx
* 01/04/11 - v.1.0.9
   - fixes return type error in node.hpp ubuffer.hpp and buffer.hpp
   - added the method get_channel_id() in the emitter and collector class
     the method returns the id of the worker thread from which an input task
     is coming from
   - added the fibonacci and the quicksort examples
   - added basic interface for pinning threads to CPUs
   - added multipush and mpush to SWSR buffer (experimental code)
   - added mpush to uSWSR queue (experimental code)
   - more tests
   - improved cmake test
   - improved performance for fine grain D&C computation (farm+feedback)
     by changing the losetime_in method in the lb class.
   - added Multi-Producers/Multi-Consumers queue (MSqueue by Michael and Scott) 
     (EXPERIMENTAL code )
   - added abstraction_dcas from liblfds (www.liblfds.org), no powerpc support yet!
   - fixed some bugs in the allocator
   - posix_memalign implemented in the allocator
   - ticket-spinlock from Linux kernel (EXPERIMENTAL code only for Linux)
   - added two lock-based methods in uSWSR queue (mp_push and mc_pop)
   - fixed missing files in CMakeLists.txt
   - fixed deadlock situation when pipeline with feedback channel is created (torus pattern)
   - implemented a Deferred Reclamation strategy based on number of free in the allocator
   - added the ff_queue implementation of a SPSC queue by Dmitry Vyukov (www.1024cores.net)
   - first porting on Windows OS
* 01/09/10 - v.1.0.0
   - New release
   - some bugs fixed
   - unbounded SWSR queue improved (removed all locks)
   - added dynqueue (dynamic list-based queue)
   - all .hpp files moved into the ff directory
   - more tests added
   - cmake compilation support (thanks to Fedor Sakharov)
   - improved the accelerator sturcture (added FF_EOS_NOFREEZE tag)
   - added the management of second level streams
   - added the 'stop' method in the farm and pipeline skeleton
   - fixed ffStats method when run_then_freeze is called multiple times
   - one memory leak removed
   - removed some warnings related to strict-aliasing 
* 22/03/10 - v.1.0.0rc2
   - Moved to LGPLv3 license. 
   - More tests and applications (including pbzip2). 
   - FastFlow Allocator improved. 
   - Fixed some minor bugs. 
   - Added the broadcast_task method.
* 03/02/10 - v.1.0.0rc1 
   - Minor API revision. 
   - Improved FastFlow accelerator support. 
   - More tests and applications,(Nokia QT Mandelbrot and NQueens)
   - Simple execution trace support.
   - Allocator improved. 
* 16/11/09 - v.0.9.7
   - Major API revision: patterns are no longer object factories but objects. 
   - Support for arbitrary nesting of pipe, farm, and loop at high-level layer.
   - First version of the Divide&Conquer pattern (no examples yet).
   - First version of the FastFlow's Accelerator.
* 19/10/09 - v.0.6.1
   - FastFlow-swps3 Smith-Waterman application added.
* 15/10/09 - v.0.5.0
   - First release. 
   - Support for farm skeleton/pattern.
