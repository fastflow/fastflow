^^^^^^^^^^^^^^^^^^^^^^^^^^^
^ New ideas and features: ^
^^^^^^^^^^^^^^^^^^^^^^^^^^^

- optimize Barrier both for standard multi-core and for Xeon Phi 
- configure by using cmake ( ** ON GOING ** )
- ordered farm ( ** DONE ** ) 
     ff_ofarm pattern
- threads mapper ( ** DONE ** )
     in the release 2.0.0
- more applications (ideas/volunteers are welcome)
- deadlock avoidance for skeleton with cycles ( ** DONE ** )
     The channels are now implemented using by default unbounded queue 
     (ubuffer.hpp)
     Bounded queue can be used by defining FF_BOUNDED_BUFFER in node.hpp.

- add the possibility to define fallback function
  even if there are feedback channels due to 
  master-worker configuration ( ** ABORTED ** )
- give the possibility to define a user-level 
  collection policy (in the same way as in the scheduling
  policy) ( ** DONE ** )
- dynamic reconfiguration of the number of workers in the farm pattern
  ( ** ON GOING ** )
  NOTE: starting from 2.0.2 it is possible to start and put to sleep and then
        restart again when needed at run-time farm's workers.
- blocking run-time (using mutex) for coarse-grain applications  
- revise the management of multi-input in the farm and pipeline, in the current 
  version (2.0.2) is is not homogeneous

Massimo Torquati


Windows version:

- Currently tested only on Windows 7 Visual Studio 10 Win64
- Automatic pinning currently not enabled. Thread id should be made coherent with 1..n Linux vision.
- ZeroMQ is not always automatically detected, install location should be passed to cmake, e.g.

cmake -G"Visual Studio 10 Win64" -DZEROMQ_ROOT="C:\Program Files\ZeroMQ 2.2.0" ..

- Distributed version has not been extensively tested.
- Winsock.h (windows.h) and winsock2.h conflict issue partially solved.
  <ff/dnode.h> should be included before other includes to avoid the problem. 
  It includes winsock2.h that is required by zeromq.  
- opencv and zeromq apparently cannot be mixed. Opencv requires winsock.h, zeromq winsock2.h. 
Marco Aldinucci
