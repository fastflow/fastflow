add_subdirectory( cholesky )
add_subdirectory( matmul )
add_subdirectory( fibonacci )
add_subdirectory( quicksort )
find_package( Qt4 )
if( QT4_FOUND )
add_subdirectory( qt-mandelbrot )
endif( QT4_FOUND )
if (NOT(CMAKE_SYSTEM_NAME MATCHES "Windows"))
find_package ( BZip2 )
if(BZIP2_FOUND)
  add_subdirectory( pbzip2 )
else (BZIP2_FOUND)
  message(WARNING "libbz2 not found: Skipping pbzip2 example")
endif (BZIP2_FOUND)
add_subdirectory( swps3 )
endif (NOT(CMAKE_SYSTEM_NAME MATCHES "Windows"))
add_subdirectory( nqueens )
find_package ( X11 )
if( X11_FOUND )
add_subdirectory( simple_mandelbrot )
endif( X11_FOUND )
set(Boost_ADDITIONAL_VERSIONS "1.51")
set(Boost_USE_STATIC_LIBS        ON)
set(Boost_USE_MULTITHREADED      ON)
set(Boost_USE_STATIC_RUNTIME    OFF)
if (CMAKE_SYSTEM_NAME MATCHES "Windows")
    set(BOOST_ROOT "/Program Files/boost/boost_1_51")
endif (CMAKE_SYSTEM_NAME MATCHES "Windows")
find_package ( Boost COMPONENTS program_options  )
if(Boost_FOUND)
#if ((CMAKE_SYSTEM_NAME MATCHES "Windows") AND (CMAKE_CL_64))
#    message(WARNING "Cannot check if Boost is 64 bit, skipping examples requiring boost") 
#    message(WARNING "Edit example/CMakeList.txt to force inclusion")
#	add_subdirectory( cwc-simulator )
#  else ((CMAKE_SYSTEM_NAME MATCHES "Windows") AND (CMAKE_CL_64)) 
    add_subdirectory( cwc-simulator )
#  endif ((CMAKE_SYSTEM_NAME MATCHES "Windows") AND (CMAKE_CL_64))
else (Boost_FOUND)
message (WARNING " Boost not found: Skipping CWC simulator example")
endif (Boost_FOUND)

#OpenCV
#include_directories ("/home/software/include") #custom OpenCV headers
#find_library ( OpenCV_LIBS opencv_highgui /home/software/lib ) #custom OpenCV libs
#set (OpenCV_FOUND TRUE)
find_package( OpenCV )
if (OpenCV_FOUND)
  #add_subdirectory( spd-denoiser/cuda )
  #add_subdirectory( spd-denoiser/cuda/video )
  add_subdirectory( spd-denoiser/opencl )
else (OpenCV_FOUND)
  message (WARNING " OpenCV not found: Skipping denoiser example")
endif (OpenCV_FOUND)

